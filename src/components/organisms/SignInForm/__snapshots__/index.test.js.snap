exports[`test renders SignInForm 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Form
        onSubmit={undefined}>
        <Field
            component={[Function]}
            label="Email"
            name="email"
            type="text" />
        <Field
            component={[Function]}
            label="Password"
            name="password"
            type="password" />
        <Mock
            disabled={undefined}
            type="submit">
            <FormattedMessage
                id="user.sign_in"
                tagName="span"
                values={Object {}} />
        </Mock>
    </Form>
    <Styled(Mock)
        to="/signup">
        <FormattedMessage
            id="user.create_account"
            values={Object {}} />
    </Styled(Mock)>
    <Styled(Mock)
        to="/forgot-password">
        <FormattedMessage
            id="user.forgot_password.heading"
            values={Object {}} />
    </Styled(Mock)>
    <Mock />
    <Mock />
</div>,
  "nodes": Array [
    <div>
      <Form
            onSubmit={undefined}>
            <Field
                  component={[Function]}
                  label="Email"
                  name="email"
                  type="text" />
            <Field
                  component={[Function]}
                  label="Password"
                  name="password"
                  type="password" />
            <Mock
                  disabled={undefined}
                  type="submit">
                  <FormattedMessage
                        id="user.sign_in"
                        tagName="span"
                        values={Object {}} />
            </Mock>
      </Form>
      <Styled(Mock)
            to="/signup">
            <FormattedMessage
                  id="user.create_account"
                  values={Object {}} />
      </Styled(Mock)>
      <Styled(Mock)
            to="/forgot-password">
            <FormattedMessage
                  id="user.forgot_password.heading"
                  values={Object {}} />
      </Styled(Mock)>
      <Mock />
      <Mock />
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SignInForm />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Form
                    onSubmit={undefined}>
                    <Field
                              component={[Function]}
                              label="Email"
                              name="email"
                              type="text" />
                    <Field
                              component={[Function]}
                              label="Password"
                              name="password"
                              type="password" />
                    <Mock
                              disabled={undefined}
                              type="submit">
                              <FormattedMessage
                                        id="user.sign_in"
                                        tagName="span"
                                        values={Object {}} />
                    </Mock>
          </Form>
          <Styled(Mock)
                    to="/signup">
                    <FormattedMessage
                              id="user.create_account"
                              values={Object {}} />
          </Styled(Mock)>
          <Styled(Mock)
                    to="/forgot-password">
                    <FormattedMessage
                              id="user.forgot_password.heading"
                              values={Object {}} />
          </Styled(Mock)>
          <Mock />
          <Mock />
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <Form
                    onSubmit={undefined}>
                    <Field
                              component={[Function]}
                              label="Email"
                              name="email"
                              type="text" />
                    <Field
                              component={[Function]}
                              label="Password"
                              name="password"
                              type="password" />
                    <Mock
                              disabled={undefined}
                              type="submit">
                              <FormattedMessage
                                        id="user.sign_in"
                                        tagName="span"
                                        values={Object {}} />
                    </Mock>
          </Form>
          <Styled(Mock)
                    to="/signup">
                    <FormattedMessage
                              id="user.create_account"
                              values={Object {}} />
          </Styled(Mock)>
          <Styled(Mock)
                    to="/forgot-password">
                    <FormattedMessage
                              id="user.forgot_password.heading"
                              values={Object {}} />
          </Styled(Mock)>
          <Mock />
          <Mock />
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SignInForm />,
}
`;
