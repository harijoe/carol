// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Conversation 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div
    className="conversation"
    innerRef={[Function]}
>
    <div>
        <Mock>
            message
        </Mock>
        <div>
            <Attachment
                answer={
                    Object {
                        "payload": "6843531-515-56465",
                        "text": "response",
                      }
                }
                attachment={null}
                locale={undefined}
                redirectTo={undefined}
                reply={undefined}
            />
            <QuickReplies
                answer={
                    Object {
                        "payload": "6843531-515-56465",
                        "text": "response",
                      }
                }
                quick_replies={Array []}
                reply={undefined}
            />
        </div>
        <Answer
            answer="response"
        />
    </div>
</styled.div>,
  "nodes": Array [
    <styled.div
      className="conversation"
      innerRef={[Function]}
>
      <div>
            <Mock>
                  message
            </Mock>
            <div>
                  <Attachment
                        answer={
                              Object {
                                    "payload": "6843531-515-56465",
                                    "text": "response",
                                  }
                        }
                        attachment={null}
                        locale={undefined}
                        redirectTo={undefined}
                        reply={undefined}
                  />
                  <QuickReplies
                        answer={
                              Object {
                                    "payload": "6843531-515-56465",
                                    "text": "response",
                                  }
                        }
                        quick_replies={Array []}
                        reply={undefined}
                  />
            </div>
            <Answer
                  answer="response"
            />
      </div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Conversation
        activeConversation={
                Array [
                        Object {
                          "answer": Object {
                            "payload": "6843531-515-56465",
                            "text": "response",
                          },
                          "message": Object {
                            "quick_replies": Array [],
                            "text": "message",
                          },
                        },
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Conversation {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "activeConversation": Array [
            Object {
              "answer": Object {
                "payload": "6843531-515-56465",
                "text": "response",
              },
              "message": Object {
                "quick_replies": Array [],
                "text": "message",
              },
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div
          className="conversation"
          innerRef={[Function]}
>
          <div>
                    <Mock>
                              message
                    </Mock>
                    <div>
                              <Attachment
                                        answer={
                                                  Object {
                                                            "payload": "6843531-515-56465",
                                                            "text": "response",
                                                          }
                                        }
                                        attachment={null}
                                        locale={undefined}
                                        redirectTo={undefined}
                                        reply={undefined}
                              />
                              <QuickReplies
                                        answer={
                                                  Object {
                                                            "payload": "6843531-515-56465",
                                                            "text": "response",
                                                          }
                                        }
                                        quick_replies={Array []}
                                        reply={undefined}
                              />
                    </div>
                    <Answer
                              answer="response"
                    />
          </div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div
          className="conversation"
          innerRef={[Function]}
>
          <div>
                    <Mock>
                              message
                    </Mock>
                    <div>
                              <Attachment
                                        answer={
                                                  Object {
                                                            "payload": "6843531-515-56465",
                                                            "text": "response",
                                                          }
                                        }
                                        attachment={null}
                                        locale={undefined}
                                        redirectTo={undefined}
                                        reply={undefined}
                              />
                              <QuickReplies
                                        answer={
                                                  Object {
                                                            "payload": "6843531-515-56465",
                                                            "text": "response",
                                                          }
                                        }
                                        quick_replies={Array []}
                                        reply={undefined}
                              />
                    </div>
                    <Answer
                              answer="response"
                    />
          </div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Conversation
    activeConversation={
        Array [
            Object {
              "answer": Object {
                "payload": "6843531-515-56465",
                "text": "response",
              },
              "message": Object {
                "quick_replies": Array [],
                "text": "message",
              },
            },
          ]
    }
/>,
}
`;
