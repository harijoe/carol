exports[`test renders PostList 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Mock
    loading={undefined}>
    <div />
    <div />
    <div />
</Mock>,
  "nodes": Array [
    <Mock
      loading={undefined}>
      <div />
      <div />
      <div />
</Mock>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <PostList
        generateChild={[Function]}
        list={
                Array [
                        Object {
                          "body": "body 1",
                          "id": 1,
                          "title": "title 1",
                        },
                        Object {
                          "body": "body 2",
                          "id": 2,
                          "title": "title 2",
                        },
                        Object {
                          "body": "body 3",
                          "id": 3,
                          "title": "title 3",
                        },
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "generateChild": [Function],
          "list": Array [
            Object {
              "body": "body 1",
              "id": 1,
              "title": "title 1",
            },
            Object {
              "body": "body 2",
              "id": 2,
              "title": "title 2",
            },
            Object {
              "body": "body 3",
              "id": 3,
              "title": "title 3",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Mock
          loading={undefined}>
          <div />
          <div />
          <div />
</Mock>,
        "_debugID": 2,
        "_renderedOutput": <Mock
          loading={undefined}>
          <div />
          <div />
          <div />
</Mock>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PostList
    generateChild={[Function]}
    list={
        Array [
            Object {
              "body": "body 1",
              "id": 1,
              "title": "title 1",
            },
            Object {
              "body": "body 2",
              "id": 2,
              "title": "title 2",
            },
            Object {
              "body": "body 3",
              "id": 3,
              "title": "title 3",
            },
          ]
    } />,
}
`;
