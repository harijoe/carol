// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders PopinMenu 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <Background
        display={false}
        onClick={[Function]}
    />
    <Menu
        display={false}
    >
        <StyledList
            active={false}
        >
            <StyledItem
                onClick={[Function]}
            >
                hello
            </StyledItem>
        </StyledList>
    </Menu>
    <StyledButton
        onClick={[Function]}
        type="button"
    >
        Test
    </StyledButton>
</div>,
  "nodes": Array [
    <div>
      <Background
            display={false}
            onClick={[Function]}
      />
      <Menu
            display={false}
      >
            <StyledList
                  active={false}
            >
                  <StyledItem
                        onClick={[Function]}
                  >
                        hello
                  </StyledItem>
            </StyledList>
      </Menu>
      <StyledButton
            onClick={[Function]}
            type="button"
      >
            Test
      </StyledButton>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <PopinMenu
        menu={
                Array [
                        "hello",
                      ]
        }
>
        Test
</PopinMenu>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PopinMenu {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "disableMenu": [Function],
        "hide": [Function],
        "props": Object {
          "children": "Test",
          "menu": Array [
            "hello",
          ],
        },
        "refs": Object {},
        "state": Object {
          "active": false,
          "display": false,
        },
        "toggle": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <Background
                    display={false}
                    onClick={[Function]}
          />
          <Menu
                    display={false}
          >
                    <StyledList
                              active={false}
                    >
                              <StyledItem
                                        onClick={[Function]}
                              >
                                        hello
                              </StyledItem>
                    </StyledList>
          </Menu>
          <StyledButton
                    onClick={[Function]}
                    type="button"
          >
                    Test
          </StyledButton>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <Background
                    display={false}
                    onClick={[Function]}
          />
          <Menu
                    display={false}
          >
                    <StyledList
                              active={false}
                    >
                              <StyledItem
                                        onClick={[Function]}
                              >
                                        hello
                              </StyledItem>
                    </StyledList>
          </Menu>
          <StyledButton
                    onClick={[Function]}
                    type="button"
          >
                    Test
          </StyledButton>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PopinMenu
    menu={
        Array [
            "hello",
          ]
    }
>
    Test
</PopinMenu>,
}
`;
