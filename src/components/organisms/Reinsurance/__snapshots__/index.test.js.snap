exports[`test renders Reinsurance 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Mock
    light={true}>
    <Mock>
        <Mock>
            <Mock
                xs={12}>
                <Mock
                    carousel={
                        Object {
                            "afterChange": [Function],
                            "infinite": false,
                          }
                    }
                    generateBackground={[Function]}
                    generateChild={[Function]}
                    limit={3}
                    scope="reinsuranceArticles"
                    tags={
                        Array [
                            "api-quotatis-reinsurance",
                          ]
                    } />
            </Mock>
        </Mock>
    </Mock>
</Mock>,
  "nodes": Array [
    <Mock
      light={true}>
      <Mock>
            <Mock>
                  <Mock
                        xs={12}>
                        <Mock
                              carousel={
                                    Object {
                                          "afterChange": [Function],
                                          "infinite": false,
                                        }
                              }
                              generateBackground={[Function]}
                              generateChild={[Function]}
                              limit={3}
                              scope="reinsuranceArticles"
                              tags={
                                    Array [
                                          "api-quotatis-reinsurance",
                                        ]
                              } />
                  </Mock>
            </Mock>
      </Mock>
</Mock>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Reinsurance />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Reinsurance {
        "_reactInternalInstance": [Circular],
        "afterChange": [Function],
        "context": Object {},
        "generateBackground": [Function],
        "props": Object {},
        "refs": Object {},
        "state": Object {
          "activeImage": 0,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Mock
          light={true}>
          <Mock>
                    <Mock>
                              <Mock
                                        xs={12}>
                                        <Mock
                                                  carousel={
                                                            Object {
                                                                      "afterChange": [Function],
                                                                      "infinite": false,
                                                                    }
                                                  }
                                                  generateBackground={[Function]}
                                                  generateChild={[Function]}
                                                  limit={3}
                                                  scope="reinsuranceArticles"
                                                  tags={
                                                            Array [
                                                                      "api-quotatis-reinsurance",
                                                                    ]
                                                  } />
                              </Mock>
                    </Mock>
          </Mock>
</Mock>,
        "_debugID": 2,
        "_renderedOutput": <Mock
          light={true}>
          <Mock>
                    <Mock>
                              <Mock
                                        xs={12}>
                                        <Mock
                                                  carousel={
                                                            Object {
                                                                      "afterChange": [Function],
                                                                      "infinite": false,
                                                                    }
                                                  }
                                                  generateBackground={[Function]}
                                                  generateChild={[Function]}
                                                  limit={3}
                                                  scope="reinsuranceArticles"
                                                  tags={
                                                            Array [
                                                                      "api-quotatis-reinsurance",
                                                                    ]
                                                  } />
                              </Mock>
                    </Mock>
          </Mock>
</Mock>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Reinsurance />,
}
`;
